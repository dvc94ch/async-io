name: Build and test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [nightly, beta, stable, 1.39.0]
    steps:
      - uses: actions/checkout@v2

      - name: Set current week of the year in environnement
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macOS')
        run: echo "CURRENT_WEEK=$(date +%V)" >> $GITHUB_ENV

      - name: Set current week of the year in environnement
        if: startsWith(matrix.os, 'windows')
        run: echo "CURRENT_WEEK=$(Get-Date -UFormat %V)" >> $GITHUB_ENV

      - name: Install latest ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.rust }}
            profile: minimal
            override: true

      - name: Run basic cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --all-features

      - name: Run cargo check
        if: startsWith(matrix.rust, '1.39.0') == false
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --benches --bins --examples --tests --all-features

      - name: Run cargo check (without dev-dependencies to catch missing feature flags)
        if: startsWith(matrix.rust, 'nightly')
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -Z features=dev_dep

      - name: Run cargo test
        if: startsWith(matrix.rust, '1.39.0') == false
        uses: actions-rs/cargo@v1
        with:
          command: test

  # Copied from: https://github.com/rust-lang/stacker/pull/19/files
  windows_gnu:
    runs-on: windows-latest
    strategy:
      matrix:
        rust_toolchain: [nightly]
        rust_target:
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v1
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.rust_toolchain }}
            target: ${{ matrix.rust_target }}
            default: true
      # https://github.com/rust-lang/rust/issues/49078
      - name: Fix windows-gnu rust-mingw
        run : |
          for i in crt2.o dllcrt2.o libmingwex.a libmsvcrt.a ; do
            cp -f "/C/ProgramData/Chocolatey/lib/mingw/tools/install/mingw64/x86_64-w64-mingw32/lib/$i" "`rustc --print sysroot`/lib/rustlib/x86_64-pc-windows-gnu/lib"
          done
        shell: bash
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.rust_target }} --all --benches --bins --examples --tests --all-features
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.rust_target }}
